{"version":3,"file":"static/js/35.d9364338.chunk.js","mappings":"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","sources":["components/Contacts/Contacts2.jsx","components/Filter/Filter.jsx","components/Form/Form.jsx","pages/PhoneBook.jsx"],"sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\n\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\n\nimport Grid from '@mui/material/Grid';\n\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PermContactCalendarIcon from '@mui/icons-material/PermContactCalendar';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setfilterContacts, setIsLoading } from 'redux/contacts/contactsSlice';\nimport PropTypes from 'prop-types';\nimport {\n  getContactsThunk,\n  deleteContactsThunk,\n} from 'redux/contacts/contacts.thunk';\n\nimport { BallTriangle } from 'react-loader-spinner';\n\nconst Demo = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n}));\n\nexport default function Contacts2() {\n  const contactLoading = useSelector(setIsLoading);\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(deleteContactsThunk(id));\n  const filterContacts = useSelector(setfilterContacts);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n      {contactLoading ? (\n        <div className=\"loader\">\n          <BallTriangle\n            height={100}\n            width={100}\n            radius={5}\n            color=\"#1976d2\"\n            ariaLabel=\"ball-triangle-loading\"\n            wrapperClass={{}}\n            wrapperStyle=\"\"\n            visible={true}\n          />\n        </div>\n      ) : (\n        <Box sx={{ flexGrow: 1, maxWidth: 752 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n              <Demo>\n                <List>\n                  {filterContacts.map(({ id, name, number }) => {\n                    return (\n                      <ListItem\n                        key={id}\n                        secondaryAction={\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"delete\"\n                            onClick={() => handleDelete(id)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        }\n                      >\n                        <ListItemAvatar>\n                          <Avatar>\n                            <PermContactCalendarIcon />\n                          </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary={name} secondary={number} />\n                      </ListItem>\n                    );\n                  })}\n                </List>\n              </Demo>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n}\n\nContacts2.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      phone: PropTypes.string,\n    })\n  ),\n};\n","import { nanoid } from 'nanoid';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilterValue, setSerch } from 'redux/filter/filterSlice';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const filterValue = useSelector(setFilterValue);\n  const dispatch = useDispatch();\n  const filterID = nanoid();\n  return (\n    <>\n      <label htmlFor={filterID}>\n        <TextField\n          id=\"standard-multiline-flexible\"\n          label=\"Find contac by name\"\n          sx={{\n            width:300,\n          }}\n          value={filterValue}\n          multiline\n          maxRows={4}\n          variant=\"standard\"\n          onChange={e => dispatch(setSerch(e.target.value))}\n          \n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { setContactsValue } from 'redux/contacts/contactsSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContactsThunk } from 'redux/contacts/contacts.thunk';\nimport { Box, TextField } from '@mui/material';\nimport Button from '@mui/material/Button';\n\nimport SendIcon from '@mui/icons-material/Send';\n\n\n\nexport const Form = () => {\n  const contacts = useSelector(setContactsValue);\n  const dispatch = useDispatch();\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const data = new FormData(form);\n    const includeName = contacts.find(user => user.name === data.get('name'));\n    if (includeName) {\n      alert(`${data.get('name')} is already in contacs`);\n    } else {\n      dispatch(\n        addContactsThunk({ name: data.get('name'), number: data.get('number') })\n      );\n      form.reset();\n    }\n  };\n\n  return (\n    <form onSubmit={handelSubmit}>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'baseline',\n          '& > :not(style)': { m: 1 },\n        }}\n      >\n        <TextField\n          helperText=\"Please enter name\"\n          id=\"demo-helper-text-aligned\"\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <TextField\n          helperText=\"Please enter number \"\n          id=\"demo-helper-text-aligned-no-helper\"\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          sx={{\n            height: 56,\n          }}\n          type=\"submit\"\n          endIcon={<SendIcon />}\n        >\n          ADD\n        </Button>\n      </Box>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n","// import { Contacts } from \"components/Contacts/Contacts\";\nimport Contacts2 from \"components/Contacts/Contacts2\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Form } from \"components/Form/Form\";\nimport Typography from '@mui/material/Typography';\n\n\n const PhoneBook = () => {\n  return (\n    <>\n      <Typography variant=\"h2\" gutterBottom>\n        Create Contact\n      </Typography>\n      <Form />\n\n      <Typography variant=\"h4\" gutterBottom>\n         Contacts\n      </Typography>\n      <Filter />\n      <Contacts2 />\n    </>\n  );\n\n};\n\nexport default PhoneBook;"],"names":["Demo","styled","backgroundColor","theme","palette","background","paper","Contacts2","contactLoading","useSelector","setIsLoading","dispatch","useDispatch","filterContacts","setfilterContacts","useEffect","getContactsThunk","className","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","Box","sx","flexGrow","maxWidth","Grid","container","spacing","item","xs","md","List","map","id","name","number","ListItem","secondaryAction","IconButton","edge","onClick","deleteContactsThunk","handleDelete","Delete","ListItemAvatar","Avatar","PermContactCalendar","ListItemText","primary","secondary","Filter","filterValue","setFilterValue","filterID","nanoid","htmlFor","TextField","label","value","multiline","maxRows","variant","onChange","e","setSerch","target","Form","contacts","setContactsValue","onSubmit","preventDefault","form","currentTarget","data","FormData","find","user","get","alert","addContactsThunk","reset","display","alignItems","m","helperText","type","pattern","title","required","Button","size","endIcon","Send","Typography","gutterBottom"],"sourceRoot":""}