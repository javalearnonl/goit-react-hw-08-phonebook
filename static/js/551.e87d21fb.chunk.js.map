{"version":3,"file":"static/js/551.e87d21fb.chunk.js","mappings":"+WAcMA,GAAQC,EAAAA,EAAAA,KAEC,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAY,mCAAG,WAAMC,GAAN,uEACnBA,EAAMC,iBACAC,EAAO,IAAIC,SAASH,EAAMI,eAChCN,GAAgB,GAEhBO,YAAU,iBAAC,uGAEgBb,GACrBc,EAAAA,EAAAA,IAAM,CACJC,MAAOL,EAAKM,IAAI,SAChBC,SAAUP,EAAKM,IAAI,eALhB,OASiB,MATjB,OASME,SACXd,EAAgB,wJAChBe,OAAOC,MAAM,yJAXR,gDAcPhB,EAAgB,2PAdT,QAiBTE,GAAgB,GAjBP,yDAkBR,KAvBgB,2CAAH,sDA0BlB,OACE,SAACe,EAAA,EAAD,CAAexB,MAAOA,EAAtB,UACE,UAACyB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYb,UAAU,KAAKc,QAAQ,KAAnC,SAAwC,WAGvClC,IACC,SAACiC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,QAAQC,MAAM,SAAhD,SACGpC,KAGL,UAACuB,EAAA,EAAD,CACEH,UAAU,OACViB,SAAUjC,EACVkC,YAAU,EACVd,GAAI,CAAEe,GAAI,GAJZ,WAME,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,KAEX,SAACR,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,sBAGf,SAACG,EAAA,EAAD,CACED,KAAK,SACLN,WAAS,EACTT,QAAQ,YACRV,GAAI,CAAEe,GAAI,EAAGY,GAAI,GACjBC,SAAUlD,EALZ,SAOGA,EAAe,gBAAkB,sBAO/C,CC7GD,IAQA,EARc,WACZ,OACE,+BACE,SAACN,EAAD,KAGL,C","sources":["components/LoginForm/SignIn.js","pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/auth.thunk';\n\nconst theme = createTheme();\n\nexport default function SignIn() {\n  const dispatch = useDispatch();\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    setIsSubmitting(true);\n\n    setTimeout(async () => {\n      try {\n        const response = await dispatch(\n          login({\n            email: data.get('email'),\n            password: data.get('password'),\n          })\n        );\n\n        if (response.status !== 200) {\n          setErrorMessage('Ошибка: Неверный email или пароль');\n          window.alert('Ошибка: Неверный email или пароль');\n        }\n      } catch (error) {\n        setErrorMessage('Произошла ошибка. Пожалуйста, попробуйте позже.');\n      }\n\n      setIsSubmitting(false);\n    }, 1000);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 3, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log in\n          </Typography>\n          {errorMessage && (\n            <Typography variant=\"body2\" color=\"error\" align=\"center\">\n              {errorMessage}\n            </Typography>\n          )}\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? 'Submitting...' : 'Sign In'}\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import SignIn from 'components/LoginForm/SignIn';\n\nconst Login = () => {\n  return (\n    <>\n      <SignIn />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["theme","createTheme","SignIn","dispatch","useDispatch","useState","errorMessage","setErrorMessage","isSubmitting","setIsSubmitting","handleSubmit","event","preventDefault","data","FormData","currentTarget","setTimeout","login","email","get","password","status","window","alert","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","color","align","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","mb","disabled"],"sourceRoot":""}